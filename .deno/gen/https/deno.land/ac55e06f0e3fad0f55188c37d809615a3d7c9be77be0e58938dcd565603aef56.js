const BODY_KEY = "body";
const PARSED_BODY_KEY = "parsedBody";
const RAW_BODY_KEY = "raw";
export const requestProxy = (req)=>new Proxy(req, {
        get: (target, prop)=>{
            let value;
            if (prop === BODY_KEY) {
                value = target[PARSED_BODY_KEY] ?? target[BODY_KEY];
            } else if (prop === RAW_BODY_KEY) {
                value = target[BODY_KEY];
            } else {
                value = target[prop];
            }
            if (prop === "respond") {
                return value.bind(target);
            }
            return value;
        },
        set: (target, prop, value, receiver)=>{
            if (prop === BODY_KEY) {
                return Reflect.set(target, PARSED_BODY_KEY, value, receiver);
            }
            return Reflect.set(target, prop, value, receiver);
        }
    })
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL2Rlbm8ubGFuZC94L29waW5lQDEuMy40L3NyYy91dGlscy9yZXF1ZXN0UHJveHkudHM+Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QgfSBmcm9tIFwiLi4vdHlwZXMudHNcIjtcblxuY29uc3QgQk9EWV9LRVkgPSBcImJvZHlcIjtcbmNvbnN0IFBBUlNFRF9CT0RZX0tFWSA9IFwicGFyc2VkQm9keVwiO1xuY29uc3QgUkFXX0JPRFlfS0VZID0gXCJyYXdcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVlc3RQcm94eSA9IChyZXE6IFJlcXVlc3QpOiBSZXF1ZXN0ID0+XG4gIG5ldyBQcm94eShyZXEsIHtcbiAgICBnZXQ6ICh0YXJnZXQ6IGFueSwgcHJvcDogc3RyaW5nIHwgbnVtYmVyIHwgc3ltYm9sKSA9PiB7XG4gICAgICBsZXQgdmFsdWU7XG5cbiAgICAgIGlmIChwcm9wID09PSBCT0RZX0tFWSkge1xuICAgICAgICB2YWx1ZSA9IHRhcmdldFtQQVJTRURfQk9EWV9LRVldID8/IHRhcmdldFtCT0RZX0tFWV07XG4gICAgICB9IGVsc2UgaWYgKHByb3AgPT09IFJBV19CT0RZX0tFWSkge1xuICAgICAgICB2YWx1ZSA9IHRhcmdldFtCT0RZX0tFWV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSA9IHRhcmdldFtwcm9wXTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb3AgPT09IFwicmVzcG9uZFwiKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5iaW5kKHRhcmdldCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogKFxuICAgICAgdGFyZ2V0OiBhbnksXG4gICAgICBwcm9wOiBzdHJpbmcgfCBudW1iZXIgfCBzeW1ib2wsXG4gICAgICB2YWx1ZTogYW55LFxuICAgICAgcmVjZWl2ZXI6IGFueSxcbiAgICApOiBib29sZWFuID0+IHtcbiAgICAgIGlmIChwcm9wID09PSBCT0RZX0tFWSkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5zZXQodGFyZ2V0LCBQQVJTRURfQk9EWV9LRVksIHZhbHVlLCByZWNlaXZlcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgfSxcbiAgfSk7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik1BRU0sUUFBUSxJQUFHLElBQU07TUFDakIsZUFBZSxJQUFHLFVBQVk7TUFDOUIsWUFBWSxJQUFHLEdBQUs7YUFFYixZQUFZLElBQUksR0FBWSxPQUNuQyxLQUFLLENBQUMsR0FBRztRQUNYLEdBQUcsR0FBRyxNQUFXLEVBQUUsSUFBOEI7Z0JBQzNDLEtBQUs7Z0JBRUwsSUFBSSxLQUFLLFFBQVE7Z0JBQ25CLEtBQUssR0FBRyxNQUFNLENBQUMsZUFBZSxLQUFLLE1BQU0sQ0FBQyxRQUFRO3VCQUN6QyxJQUFJLEtBQUssWUFBWTtnQkFDOUIsS0FBSyxHQUFHLE1BQU0sQ0FBQyxRQUFROztnQkFFdkIsS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJOztnQkFHakIsSUFBSSxNQUFLLE9BQVM7dUJBQ2IsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNOzttQkFHbkIsS0FBSzs7UUFFZCxHQUFHLEdBQ0QsTUFBVyxFQUNYLElBQThCLEVBQzlCLEtBQVUsRUFDVixRQUFhO2dCQUVULElBQUksS0FBSyxRQUFRO3VCQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsUUFBUTs7bUJBR3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSJ9