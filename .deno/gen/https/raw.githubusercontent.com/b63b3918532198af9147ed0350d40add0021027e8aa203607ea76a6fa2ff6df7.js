import { cacheHandlers } from "../../cache.ts";
import { rest } from "../../rest/rest.ts";
import { structures } from "../../structures/mod.ts";
import { endpoints } from "../../util/constants.ts";
/** Returns a guild member object for the specified user.
 *
 * ⚠️ **ADVANCED USE ONLY: Your members will be cached in your guild most likely. Only use this when you are absolutely sure the member is not cached.**
 */ export async function getMember(guildId, id, options) {
    const guild = await cacheHandlers.get("guilds", guildId);
    if (!guild && !options?.force) return;
    const data = await rest.runMethod("get", endpoints.GUILD_MEMBER(guildId, id));
    const discordenoMember = await structures.createDiscordenoMember(data, guildId);
    await cacheHandlers.set("members", discordenoMember.id, discordenoMember);
    return discordenoMember;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hlbHBlcnMvbWVtYmVycy9nZXRfbWVtYmVyLnRzPiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYWNoZUhhbmRsZXJzIH0gZnJvbSBcIi4uLy4uL2NhY2hlLnRzXCI7XG5pbXBvcnQgeyByZXN0IH0gZnJvbSBcIi4uLy4uL3Jlc3QvcmVzdC50c1wiO1xuaW1wb3J0IHsgc3RydWN0dXJlcyB9IGZyb20gXCIuLi8uLi9zdHJ1Y3R1cmVzL21vZC50c1wiO1xuaW1wb3J0IHR5cGUgeyBHdWlsZE1lbWJlcldpdGhVc2VyIH0gZnJvbSBcIi4uLy4uL3R5cGVzL21lbWJlcnMvZ3VpbGRfbWVtYmVyLnRzXCI7XG5pbXBvcnQgeyBlbmRwb2ludHMgfSBmcm9tIFwiLi4vLi4vdXRpbC9jb25zdGFudHMudHNcIjtcblxuLyoqIFJldHVybnMgYSBndWlsZCBtZW1iZXIgb2JqZWN0IGZvciB0aGUgc3BlY2lmaWVkIHVzZXIuXG4gKlxuICog4pqg77iPICoqQURWQU5DRUQgVVNFIE9OTFk6IFlvdXIgbWVtYmVycyB3aWxsIGJlIGNhY2hlZCBpbiB5b3VyIGd1aWxkIG1vc3QgbGlrZWx5LiBPbmx5IHVzZSB0aGlzIHdoZW4geW91IGFyZSBhYnNvbHV0ZWx5IHN1cmUgdGhlIG1lbWJlciBpcyBub3QgY2FjaGVkLioqXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNZW1iZXIoXG4gIGd1aWxkSWQ6IGJpZ2ludCxcbiAgaWQ6IGJpZ2ludCxcbiAgb3B0aW9ucz86IHsgZm9yY2U/OiBib29sZWFuIH0sXG4pIHtcbiAgY29uc3QgZ3VpbGQgPSBhd2FpdCBjYWNoZUhhbmRsZXJzLmdldChcImd1aWxkc1wiLCBndWlsZElkKTtcbiAgaWYgKCFndWlsZCAmJiAhb3B0aW9ucz8uZm9yY2UpIHJldHVybjtcblxuICBjb25zdCBkYXRhID0gKGF3YWl0IHJlc3QucnVuTWV0aG9kPEd1aWxkTWVtYmVyV2l0aFVzZXI+KFxuICAgIFwiZ2V0XCIsXG4gICAgZW5kcG9pbnRzLkdVSUxEX01FTUJFUihndWlsZElkLCBpZCksXG4gICkpO1xuXG4gIGNvbnN0IGRpc2NvcmRlbm9NZW1iZXIgPSBhd2FpdCBzdHJ1Y3R1cmVzLmNyZWF0ZURpc2NvcmRlbm9NZW1iZXIoXG4gICAgZGF0YSxcbiAgICBndWlsZElkLFxuICApO1xuICBhd2FpdCBjYWNoZUhhbmRsZXJzLnNldChcIm1lbWJlcnNcIiwgZGlzY29yZGVub01lbWJlci5pZCwgZGlzY29yZGVub01lbWJlcik7XG5cbiAgcmV0dXJuIGRpc2NvcmRlbm9NZW1iZXI7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IlNBQVMsYUFBYSxTQUFRLGNBQWdCO1NBQ3JDLElBQUksU0FBUSxrQkFBb0I7U0FDaEMsVUFBVSxTQUFRLHVCQUF5QjtTQUUzQyxTQUFTLFNBQVEsdUJBQXlCO0FBRW5ELEVBR0csQUFISDs7O0NBR0csQUFISCxFQUdHLHVCQUNtQixTQUFTLENBQzdCLE9BQWUsRUFDZixFQUFVLEVBQ1YsT0FBNkI7VUFFdkIsS0FBSyxTQUFTLGFBQWEsQ0FBQyxHQUFHLEVBQUMsTUFBUSxHQUFFLE9BQU87U0FDbEQsS0FBSyxLQUFLLE9BQU8sRUFBRSxLQUFLO1VBRXZCLElBQUksU0FBVSxJQUFJLENBQUMsU0FBUyxFQUNoQyxHQUFLLEdBQ0wsU0FBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsRUFBRTtVQUc5QixnQkFBZ0IsU0FBUyxVQUFVLENBQUMsc0JBQXNCLENBQzlELElBQUksRUFDSixPQUFPO1VBRUgsYUFBYSxDQUFDLEdBQUcsRUFBQyxPQUFTLEdBQUUsZ0JBQWdCLENBQUMsRUFBRSxFQUFFLGdCQUFnQjtXQUVqRSxnQkFBZ0IifQ==