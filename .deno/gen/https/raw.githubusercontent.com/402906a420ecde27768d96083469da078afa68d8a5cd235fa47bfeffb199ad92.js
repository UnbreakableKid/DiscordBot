import { eventHandlers } from "../../bot.ts";
import { cacheHandlers } from "../../cache.ts";
import { structures } from "../../structures/mod.ts";
import { snowflakeToBigint } from "../../util/bigint.ts";
export async function handleMessageUpdate(data) {
  const payload = data.d;
  const channel = await cacheHandlers.get(
    "channels",
    snowflakeToBigint(payload.channelId),
  );
  if (!channel) return;
  const oldMessage = await cacheHandlers.get(
    "messages",
    snowflakeToBigint(payload.id),
  );
  if (!oldMessage) return;
  // Messages with embeds can trigger update but they wont have edited_timestamp
  if (!payload.editedTimestamp || oldMessage.content === payload.content) {
    return;
  }
  const message = await structures.createDiscordenoMessage(payload);
  await cacheHandlers.set("messages", snowflakeToBigint(payload.id), message);
  eventHandlers.messageUpdate?.(message, oldMessage);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hhbmRsZXJzL21lc3NhZ2VzL01FU1NBR0VfVVBEQVRFLnRzPiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBldmVudEhhbmRsZXJzIH0gZnJvbSBcIi4uLy4uL2JvdC50c1wiO1xuaW1wb3J0IHsgY2FjaGVIYW5kbGVycyB9IGZyb20gXCIuLi8uLi9jYWNoZS50c1wiO1xuaW1wb3J0IHsgc3RydWN0dXJlcyB9IGZyb20gXCIuLi8uLi9zdHJ1Y3R1cmVzL21vZC50c1wiO1xuaW1wb3J0IHR5cGUgeyBEaXNjb3JkR2F0ZXdheVBheWxvYWQgfSBmcm9tIFwiLi4vLi4vdHlwZXMvZ2F0ZXdheS9nYXRld2F5X3BheWxvYWQudHNcIjtcbmltcG9ydCB0eXBlIHsgTWVzc2FnZSB9IGZyb20gXCIuLi8uLi90eXBlcy9tZXNzYWdlcy9tZXNzYWdlLnRzXCI7XG5pbXBvcnQgeyBzbm93Zmxha2VUb0JpZ2ludCB9IGZyb20gXCIuLi8uLi91dGlsL2JpZ2ludC50c1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlTWVzc2FnZVVwZGF0ZShkYXRhOiBEaXNjb3JkR2F0ZXdheVBheWxvYWQpIHtcbiAgY29uc3QgcGF5bG9hZCA9IGRhdGEuZCBhcyBNZXNzYWdlO1xuICBjb25zdCBjaGFubmVsID0gYXdhaXQgY2FjaGVIYW5kbGVycy5nZXQoXG4gICAgXCJjaGFubmVsc1wiLFxuICAgIHNub3dmbGFrZVRvQmlnaW50KHBheWxvYWQuY2hhbm5lbElkKSxcbiAgKTtcbiAgaWYgKCFjaGFubmVsKSByZXR1cm47XG5cbiAgY29uc3Qgb2xkTWVzc2FnZSA9IGF3YWl0IGNhY2hlSGFuZGxlcnMuZ2V0KFxuICAgIFwibWVzc2FnZXNcIixcbiAgICBzbm93Zmxha2VUb0JpZ2ludChwYXlsb2FkLmlkKSxcbiAgKTtcbiAgaWYgKCFvbGRNZXNzYWdlKSByZXR1cm47XG5cbiAgLy8gTWVzc2FnZXMgd2l0aCBlbWJlZHMgY2FuIHRyaWdnZXIgdXBkYXRlIGJ1dCB0aGV5IHdvbnQgaGF2ZSBlZGl0ZWRfdGltZXN0YW1wXG4gIGlmIChcbiAgICAhcGF5bG9hZC5lZGl0ZWRUaW1lc3RhbXAgfHxcbiAgICAob2xkTWVzc2FnZS5jb250ZW50ID09PSBwYXlsb2FkLmNvbnRlbnQpXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IG1lc3NhZ2UgPSBhd2FpdCBzdHJ1Y3R1cmVzLmNyZWF0ZURpc2NvcmRlbm9NZXNzYWdlKHBheWxvYWQpO1xuXG4gIGF3YWl0IGNhY2hlSGFuZGxlcnMuc2V0KFwibWVzc2FnZXNcIiwgc25vd2ZsYWtlVG9CaWdpbnQocGF5bG9hZC5pZCksIG1lc3NhZ2UpO1xuXG4gIGV2ZW50SGFuZGxlcnMubWVzc2FnZVVwZGF0ZT8uKG1lc3NhZ2UsIG9sZE1lc3NhZ2UpO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJTQUFTLGFBQWEsU0FBUSxZQUFjO1NBQ25DLGFBQWEsU0FBUSxjQUFnQjtTQUNyQyxVQUFVLFNBQVEsdUJBQXlCO1NBRzNDLGlCQUFpQixTQUFRLG9CQUFzQjtzQkFFbEMsbUJBQW1CLENBQUMsSUFBMkI7VUFDN0QsT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDO1VBQ2hCLE9BQU8sU0FBUyxhQUFhLENBQUMsR0FBRyxFQUNyQyxRQUFVLEdBQ1YsaUJBQWlCLENBQUMsT0FBTyxDQUFDLFNBQVM7U0FFaEMsT0FBTztVQUVOLFVBQVUsU0FBUyxhQUFhLENBQUMsR0FBRyxFQUN4QyxRQUFVLEdBQ1YsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQUU7U0FFekIsVUFBVTtJQUVmLEVBQThFLEFBQTlFLDRFQUE4RTtTQUUzRSxPQUFPLENBQUMsZUFBZSxJQUN2QixVQUFVLENBQUMsT0FBTyxLQUFLLE9BQU8sQ0FBQyxPQUFPOzs7VUFLbkMsT0FBTyxTQUFTLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPO1VBRTFELGFBQWEsQ0FBQyxHQUFHLEVBQUMsUUFBVSxHQUFFLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsT0FBTztJQUUxRSxhQUFhLENBQUMsYUFBYSxHQUFHLE9BQU8sRUFBRSxVQUFVIn0=
