import { BASE_URL } from "../util/constants.ts";
import { rest } from "./rest.ts";
/** Processes a request and assigns it to a queue or creates a queue if none exists for it. */ export async function processRequest(
  request,
  payload,
) {
  const route = request.url.substring(request.url.indexOf("api/"));
  const parts = route.split("/");
  // REMOVE THE API
  parts.shift();
  // REMOVES THE VERSION NUMBER
  if (parts[0]?.startsWith("v")) parts.shift();
  // SET THE NEW REQUEST URL
  request.url = `${BASE_URL}/v${rest.apiVersion}/${parts.join("/")}`;
  // REMOVE THE MAJOR PARAM
  parts.shift();
  const [id] = parts;
  const queue = rest.pathQueues.get(id);
  // IF THE QUEUE EXISTS JUST ADD THIS TO THE QUEUE
  if (queue) {
    queue.push({
      request,
      payload,
    });
  } else {
    // CREATES A NEW QUEUE
    rest.pathQueues.set(id, [
      {
        request,
        payload,
      },
    ]);
    await rest.processQueue(id);
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL3Jlc3QvcHJvY2Vzc19yZXF1ZXN0LnRzPiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCQVNFX1VSTCB9IGZyb20gXCIuLi91dGlsL2NvbnN0YW50cy50c1wiO1xuaW1wb3J0IHsgcmVzdCwgUmVzdFBheWxvYWQsIFJlc3RSZXF1ZXN0IH0gZnJvbSBcIi4vcmVzdC50c1wiO1xuXG4vKiogUHJvY2Vzc2VzIGEgcmVxdWVzdCBhbmQgYXNzaWducyBpdCB0byBhIHF1ZXVlIG9yIGNyZWF0ZXMgYSBxdWV1ZSBpZiBub25lIGV4aXN0cyBmb3IgaXQuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJvY2Vzc1JlcXVlc3QoXG4gIHJlcXVlc3Q6IFJlc3RSZXF1ZXN0LFxuICBwYXlsb2FkOiBSZXN0UGF5bG9hZCxcbikge1xuICBjb25zdCByb3V0ZSA9IHJlcXVlc3QudXJsLnN1YnN0cmluZyhyZXF1ZXN0LnVybC5pbmRleE9mKFwiYXBpL1wiKSk7XG4gIGNvbnN0IHBhcnRzID0gcm91dGUuc3BsaXQoXCIvXCIpO1xuICAvLyBSRU1PVkUgVEhFIEFQSVxuICBwYXJ0cy5zaGlmdCgpO1xuICAvLyBSRU1PVkVTIFRIRSBWRVJTSU9OIE5VTUJFUlxuICBpZiAocGFydHNbMF0/LnN0YXJ0c1dpdGgoXCJ2XCIpKSBwYXJ0cy5zaGlmdCgpO1xuICAvLyBTRVQgVEhFIE5FVyBSRVFVRVNUIFVSTFxuICByZXF1ZXN0LnVybCA9IGAke0JBU0VfVVJMfS92JHtyZXN0LmFwaVZlcnNpb259LyR7cGFydHMuam9pbihcIi9cIil9YDtcbiAgLy8gUkVNT1ZFIFRIRSBNQUpPUiBQQVJBTVxuICBwYXJ0cy5zaGlmdCgpO1xuXG4gIGNvbnN0IFtpZF0gPSBwYXJ0cztcblxuICBjb25zdCBxdWV1ZSA9IHJlc3QucGF0aFF1ZXVlcy5nZXQoaWQpO1xuICAvLyBJRiBUSEUgUVVFVUUgRVhJU1RTIEpVU1QgQUREIFRISVMgVE8gVEhFIFFVRVVFXG4gIGlmIChxdWV1ZSkge1xuICAgIHF1ZXVlLnB1c2goeyByZXF1ZXN0LCBwYXlsb2FkIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIENSRUFURVMgQSBORVcgUVVFVUVcbiAgICByZXN0LnBhdGhRdWV1ZXMuc2V0KGlkLCBbXG4gICAgICB7XG4gICAgICAgIHJlcXVlc3QsXG4gICAgICAgIHBheWxvYWQsXG4gICAgICB9LFxuICAgIF0pO1xuICAgIGF3YWl0IHJlc3QucHJvY2Vzc1F1ZXVlKGlkKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJTQUFTLFFBQVEsU0FBUSxvQkFBc0I7U0FDdEMsSUFBSSxTQUFrQyxTQUFXO0FBRTFELEVBQThGLEFBQTlGLDBGQUE4RixBQUE5RixFQUE4Rix1QkFDeEUsY0FBYyxDQUNsQyxPQUFvQixFQUNwQixPQUFvQjtVQUVkLEtBQUssR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBQyxJQUFNO1VBQ3hELEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxFQUFDLENBQUc7SUFDN0IsRUFBaUIsQUFBakIsZUFBaUI7SUFDakIsS0FBSyxDQUFDLEtBQUs7SUFDWCxFQUE2QixBQUE3QiwyQkFBNkI7UUFDekIsS0FBSyxDQUFDLENBQUMsR0FBRyxVQUFVLEVBQUMsQ0FBRyxJQUFHLEtBQUssQ0FBQyxLQUFLO0lBQzFDLEVBQTBCLEFBQTFCLHdCQUEwQjtJQUMxQixPQUFPLENBQUMsR0FBRyxNQUFNLFFBQVEsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBQyxDQUFHO0lBQy9ELEVBQXlCLEFBQXpCLHVCQUF5QjtJQUN6QixLQUFLLENBQUMsS0FBSztXQUVKLEVBQUUsSUFBSSxLQUFLO1VBRVosS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDcEMsRUFBaUQsQUFBakQsK0NBQWlEO1FBQzdDLEtBQUs7UUFDUCxLQUFLLENBQUMsSUFBSTtZQUFHLE9BQU87WUFBRSxPQUFPOzs7UUFFN0IsRUFBc0IsQUFBdEIsb0JBQXNCO1FBQ3RCLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7O2dCQUVsQixPQUFPO2dCQUNQLE9BQU87OztjQUdMLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSJ9
