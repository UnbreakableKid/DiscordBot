import { cacheHandlers } from "../../cache.ts";
import { rest } from "../../rest/rest.ts";
import { structures } from "../../structures/mod.ts";
import { endpoints } from "../../util/constants.ts";
import { requireBotGuildPermissions } from "../../util/permissions.ts";
import { urlToBase64 } from "../../util/utils.ts";
import { ws } from "../../ws/ws.ts";
/** Modify a guilds settings. Requires the MANAGE_GUILD permission. */ export async function editGuild(guildId, options) {
    await requireBotGuildPermissions(guildId, [
        "MANAGE_GUILD"
    ]);
    if (options.icon && !options.icon.startsWith("data:image/")) {
        options.icon = await urlToBase64(options.icon);
    }
    if (options.banner && !options.banner.startsWith("data:image/")) {
        options.banner = await urlToBase64(options.banner);
    }
    if (options.splash && !options.splash.startsWith("data:image/")) {
        options.splash = await urlToBase64(options.splash);
    }
    const result = await rest.runMethod("patch", endpoints.GUILDS_BASE(guildId), options);
    const cached = await cacheHandlers.get("guilds", guildId);
    return structures.createDiscordenoGuild(result, cached?.shardId || Number((BigInt(result.id) >> 22n % BigInt(ws.botGatewayData.shards)).toString()));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hlbHBlcnMvZ3VpbGRzL2VkaXRfZ3VpbGQudHM+Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhY2hlSGFuZGxlcnMgfSBmcm9tIFwiLi4vLi4vY2FjaGUudHNcIjtcbmltcG9ydCB7IHJlc3QgfSBmcm9tIFwiLi4vLi4vcmVzdC9yZXN0LnRzXCI7XG5pbXBvcnQgeyBzdHJ1Y3R1cmVzIH0gZnJvbSBcIi4uLy4uL3N0cnVjdHVyZXMvbW9kLnRzXCI7XG5pbXBvcnQgdHlwZSB7IEd1aWxkIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2d1aWxkcy9ndWlsZC50c1wiO1xuaW1wb3J0IHR5cGUgeyBNb2RpZnlHdWlsZCB9IGZyb20gXCIuLi8uLi90eXBlcy9ndWlsZHMvbW9kaWZ5X2d1aWxkLnRzXCI7XG5pbXBvcnQgeyBlbmRwb2ludHMgfSBmcm9tIFwiLi4vLi4vdXRpbC9jb25zdGFudHMudHNcIjtcbmltcG9ydCB7IHJlcXVpcmVCb3RHdWlsZFBlcm1pc3Npb25zIH0gZnJvbSBcIi4uLy4uL3V0aWwvcGVybWlzc2lvbnMudHNcIjtcbmltcG9ydCB7IHVybFRvQmFzZTY0IH0gZnJvbSBcIi4uLy4uL3V0aWwvdXRpbHMudHNcIjtcbmltcG9ydCB7IHdzIH0gZnJvbSBcIi4uLy4uL3dzL3dzLnRzXCI7XG5cbi8qKiBNb2RpZnkgYSBndWlsZHMgc2V0dGluZ3MuIFJlcXVpcmVzIHRoZSBNQU5BR0VfR1VJTEQgcGVybWlzc2lvbi4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlZGl0R3VpbGQoZ3VpbGRJZDogYmlnaW50LCBvcHRpb25zOiBNb2RpZnlHdWlsZCkge1xuICBhd2FpdCByZXF1aXJlQm90R3VpbGRQZXJtaXNzaW9ucyhndWlsZElkLCBbXCJNQU5BR0VfR1VJTERcIl0pO1xuXG4gIGlmIChvcHRpb25zLmljb24gJiYgIW9wdGlvbnMuaWNvbi5zdGFydHNXaXRoKFwiZGF0YTppbWFnZS9cIikpIHtcbiAgICBvcHRpb25zLmljb24gPSBhd2FpdCB1cmxUb0Jhc2U2NChvcHRpb25zLmljb24pO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuYmFubmVyICYmICFvcHRpb25zLmJhbm5lci5zdGFydHNXaXRoKFwiZGF0YTppbWFnZS9cIikpIHtcbiAgICBvcHRpb25zLmJhbm5lciA9IGF3YWl0IHVybFRvQmFzZTY0KG9wdGlvbnMuYmFubmVyKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLnNwbGFzaCAmJiAhb3B0aW9ucy5zcGxhc2guc3RhcnRzV2l0aChcImRhdGE6aW1hZ2UvXCIpKSB7XG4gICAgb3B0aW9ucy5zcGxhc2ggPSBhd2FpdCB1cmxUb0Jhc2U2NChvcHRpb25zLnNwbGFzaCk7XG4gIH1cblxuICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXN0LnJ1bk1ldGhvZDxHdWlsZD4oXG4gICAgXCJwYXRjaFwiLFxuICAgIGVuZHBvaW50cy5HVUlMRFNfQkFTRShndWlsZElkKSxcbiAgICBvcHRpb25zLFxuICApO1xuXG4gIGNvbnN0IGNhY2hlZCA9IGF3YWl0IGNhY2hlSGFuZGxlcnMuZ2V0KFwiZ3VpbGRzXCIsIGd1aWxkSWQpO1xuICByZXR1cm4gc3RydWN0dXJlcy5jcmVhdGVEaXNjb3JkZW5vR3VpbGQoXG4gICAgcmVzdWx0LFxuICAgIGNhY2hlZD8uc2hhcmRJZCB8fFxuICAgICAgTnVtYmVyKFxuICAgICAgICAoQmlnSW50KHJlc3VsdC5pZCkgPj4gMjJuICUgQmlnSW50KHdzLmJvdEdhdGV3YXlEYXRhLnNoYXJkcykpXG4gICAgICAgICAgLnRvU3RyaW5nKCksXG4gICAgICApLFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJTQUFTLGFBQWEsU0FBUSxjQUFnQjtTQUNyQyxJQUFJLFNBQVEsa0JBQW9CO1NBQ2hDLFVBQVUsU0FBUSx1QkFBeUI7U0FHM0MsU0FBUyxTQUFRLHVCQUF5QjtTQUMxQywwQkFBMEIsU0FBUSx5QkFBMkI7U0FDN0QsV0FBVyxTQUFRLG1CQUFxQjtTQUN4QyxFQUFFLFNBQVEsY0FBZ0I7QUFFbkMsRUFBc0UsQUFBdEUsa0VBQXNFLEFBQXRFLEVBQXNFLHVCQUNoRCxTQUFTLENBQUMsT0FBZSxFQUFFLE9BQW9CO1VBQzdELDBCQUEwQixDQUFDLE9BQU87U0FBRyxZQUFjOztRQUVyRCxPQUFPLENBQUMsSUFBSSxLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFDLFdBQWE7UUFDeEQsT0FBTyxDQUFDLElBQUksU0FBUyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUk7O1FBRzNDLE9BQU8sQ0FBQyxNQUFNLEtBQUssT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUMsV0FBYTtRQUM1RCxPQUFPLENBQUMsTUFBTSxTQUFTLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTTs7UUFHL0MsT0FBTyxDQUFDLE1BQU0sS0FBSyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBQyxXQUFhO1FBQzVELE9BQU8sQ0FBQyxNQUFNLFNBQVMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNOztVQUc3QyxNQUFNLFNBQVMsSUFBSSxDQUFDLFNBQVMsRUFDakMsS0FBTyxHQUNQLFNBQVMsQ0FBQyxXQUFXLENBQUMsT0FBTyxHQUM3QixPQUFPO1VBR0gsTUFBTSxTQUFTLGFBQWEsQ0FBQyxHQUFHLEVBQUMsTUFBUSxHQUFFLE9BQU87V0FDakQsVUFBVSxDQUFDLHFCQUFxQixDQUNyQyxNQUFNLEVBQ04sTUFBTSxFQUFFLE9BQU8sSUFDYixNQUFNLEVBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssRUFBRyxBQUFILENBQUcsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQ3hELFFBQVEifQ==