import { cacheHandlers } from "../../cache.ts";
import { rest } from "../../rest/rest.ts";
import { structures } from "../../structures/mod.ts";
import { snowflakeToBigint } from "../../util/bigint.ts";
import { endpoints } from "../../util/constants.ts";
/** Fetches a single channel object from the api.
 *
 * ⚠️ **If you need this, you are probably doing something wrong. This is not intended for use. Your channels will be cached in your guild.**
 */ export async function getChannel(channelId, addToCache = true) {
  const result = await rest.runMethod("get", endpoints.CHANNEL_BASE(channelId));
  const discordenoChannel = await structures.createDiscordenoChannel(
    result,
    result.guildId ? snowflakeToBigint(result.guildId) : undefined,
  );
  if (addToCache) {
    await cacheHandlers.set(
      "channels",
      discordenoChannel.id,
      discordenoChannel,
    );
  }
  return discordenoChannel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hlbHBlcnMvY2hhbm5lbHMvZ2V0X2NoYW5uZWwudHM+Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhY2hlSGFuZGxlcnMgfSBmcm9tIFwiLi4vLi4vY2FjaGUudHNcIjtcbmltcG9ydCB7IHJlc3QgfSBmcm9tIFwiLi4vLi4vcmVzdC9yZXN0LnRzXCI7XG5pbXBvcnQgeyBzdHJ1Y3R1cmVzIH0gZnJvbSBcIi4uLy4uL3N0cnVjdHVyZXMvbW9kLnRzXCI7XG5pbXBvcnQgdHlwZSB7IENoYW5uZWwgfSBmcm9tIFwiLi4vLi4vdHlwZXMvY2hhbm5lbHMvY2hhbm5lbC50c1wiO1xuaW1wb3J0IHsgc25vd2ZsYWtlVG9CaWdpbnQgfSBmcm9tIFwiLi4vLi4vdXRpbC9iaWdpbnQudHNcIjtcbmltcG9ydCB7IGVuZHBvaW50cyB9IGZyb20gXCIuLi8uLi91dGlsL2NvbnN0YW50cy50c1wiO1xuXG4vKiogRmV0Y2hlcyBhIHNpbmdsZSBjaGFubmVsIG9iamVjdCBmcm9tIHRoZSBhcGkuXG4gKlxuICog4pqg77iPICoqSWYgeW91IG5lZWQgdGhpcywgeW91IGFyZSBwcm9iYWJseSBkb2luZyBzb21ldGhpbmcgd3JvbmcuIFRoaXMgaXMgbm90IGludGVuZGVkIGZvciB1c2UuIFlvdXIgY2hhbm5lbHMgd2lsbCBiZSBjYWNoZWQgaW4geW91ciBndWlsZC4qKlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q2hhbm5lbChjaGFubmVsSWQ6IGJpZ2ludCwgYWRkVG9DYWNoZSA9IHRydWUpIHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzdC5ydW5NZXRob2Q8Q2hhbm5lbD4oXG4gICAgXCJnZXRcIixcbiAgICBlbmRwb2ludHMuQ0hBTk5FTF9CQVNFKGNoYW5uZWxJZCksXG4gICk7XG5cbiAgY29uc3QgZGlzY29yZGVub0NoYW5uZWwgPSBhd2FpdCBzdHJ1Y3R1cmVzLmNyZWF0ZURpc2NvcmRlbm9DaGFubmVsKFxuICAgIHJlc3VsdCxcbiAgICByZXN1bHQuZ3VpbGRJZCA/IHNub3dmbGFrZVRvQmlnaW50KHJlc3VsdC5ndWlsZElkKSA6IHVuZGVmaW5lZCxcbiAgKTtcbiAgaWYgKGFkZFRvQ2FjaGUpIHtcbiAgICBhd2FpdCBjYWNoZUhhbmRsZXJzLnNldChcbiAgICAgIFwiY2hhbm5lbHNcIixcbiAgICAgIGRpc2NvcmRlbm9DaGFubmVsLmlkLFxuICAgICAgZGlzY29yZGVub0NoYW5uZWwsXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBkaXNjb3JkZW5vQ2hhbm5lbDtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiU0FBUyxhQUFhLFNBQVEsY0FBZ0I7U0FDckMsSUFBSSxTQUFRLGtCQUFvQjtTQUNoQyxVQUFVLFNBQVEsdUJBQXlCO1NBRTNDLGlCQUFpQixTQUFRLG9CQUFzQjtTQUMvQyxTQUFTLFNBQVEsdUJBQXlCO0FBRW5ELEVBR0csQUFISDs7O0NBR0csQUFISCxFQUdHLHVCQUNtQixVQUFVLENBQUMsU0FBaUIsRUFBRSxVQUFVLEdBQUcsSUFBSTtVQUM3RCxNQUFNLFNBQVMsSUFBSSxDQUFDLFNBQVMsRUFDakMsR0FBSyxHQUNMLFNBQVMsQ0FBQyxZQUFZLENBQUMsU0FBUztVQUc1QixpQkFBaUIsU0FBUyxVQUFVLENBQUMsdUJBQXVCLENBQ2hFLE1BQU0sRUFDTixNQUFNLENBQUMsT0FBTyxHQUFHLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksU0FBUztRQUU1RCxVQUFVO2NBQ04sYUFBYSxDQUFDLEdBQUcsRUFDckIsUUFBVSxHQUNWLGlCQUFpQixDQUFDLEVBQUUsRUFDcEIsaUJBQWlCOztXQUlkLGlCQUFpQiJ9
