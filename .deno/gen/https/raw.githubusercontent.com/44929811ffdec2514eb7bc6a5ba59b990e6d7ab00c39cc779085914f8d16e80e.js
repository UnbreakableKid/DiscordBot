import { eventHandlers } from "../../bot.ts";
import { cacheHandlers } from "../../cache.ts";
import { structures } from "../../structures/mod.ts";
import { snowflakeToBigint } from "../../util/bigint.ts";
import { Collection } from "../../util/collection.ts";
export async function handleThreadListSync(data) {
    const payload = data.d;
    const discordenoChannels = await Promise.all(payload.threads.map(async (thread)=>{
        const discordenoChannel = await structures.createDiscordenoChannel(thread, snowflakeToBigint(payload.guildId));
        await cacheHandlers.set("channels", discordenoChannel.id, discordenoChannel);
        return discordenoChannel;
    }));
    const threads = new Collection(discordenoChannels.map((t)=>[
            t.id,
            t
        ]
    ));
    eventHandlers.threadListSync?.(threads, payload.members, snowflakeToBigint(payload.guildId));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hhbmRsZXJzL2NoYW5uZWxzL1RIUkVBRF9MSVNUX1NZTkMudHM+Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV2ZW50SGFuZGxlcnMgfSBmcm9tIFwiLi4vLi4vYm90LnRzXCI7XG5pbXBvcnQgeyBjYWNoZUhhbmRsZXJzIH0gZnJvbSBcIi4uLy4uL2NhY2hlLnRzXCI7XG5pbXBvcnQgeyBEaXNjb3JkZW5vQ2hhbm5lbCB9IGZyb20gXCIuLi8uLi9zdHJ1Y3R1cmVzL2NoYW5uZWwudHNcIjtcbmltcG9ydCB7IHN0cnVjdHVyZXMgfSBmcm9tIFwiLi4vLi4vc3RydWN0dXJlcy9tb2QudHNcIjtcbmltcG9ydCB7IFRocmVhZExpc3RTeW5jIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2NoYW5uZWxzL3RocmVhZHMvdGhyZWFkX2xpc3Rfc3luYy50c1wiO1xuaW1wb3J0IHsgRGlzY29yZEdhdGV3YXlQYXlsb2FkIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2dhdGV3YXkvZ2F0ZXdheV9wYXlsb2FkLnRzXCI7XG5pbXBvcnQgeyBzbm93Zmxha2VUb0JpZ2ludCB9IGZyb20gXCIuLi8uLi91dGlsL2JpZ2ludC50c1wiO1xuaW1wb3J0IHsgQ29sbGVjdGlvbiB9IGZyb20gXCIuLi8uLi91dGlsL2NvbGxlY3Rpb24udHNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVRocmVhZExpc3RTeW5jKGRhdGE6IERpc2NvcmRHYXRld2F5UGF5bG9hZCkge1xuICBjb25zdCBwYXlsb2FkID0gZGF0YS5kIGFzIFRocmVhZExpc3RTeW5jO1xuXG4gIGNvbnN0IGRpc2NvcmRlbm9DaGFubmVscyA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgIHBheWxvYWQudGhyZWFkcy5tYXAoYXN5bmMgKHRocmVhZCkgPT4ge1xuICAgICAgY29uc3QgZGlzY29yZGVub0NoYW5uZWwgPSBhd2FpdCBzdHJ1Y3R1cmVzLmNyZWF0ZURpc2NvcmRlbm9DaGFubmVsKFxuICAgICAgICB0aHJlYWQsXG4gICAgICAgIHNub3dmbGFrZVRvQmlnaW50KHBheWxvYWQuZ3VpbGRJZCksXG4gICAgICApO1xuXG4gICAgICBhd2FpdCBjYWNoZUhhbmRsZXJzLnNldChcbiAgICAgICAgXCJjaGFubmVsc1wiLFxuICAgICAgICBkaXNjb3JkZW5vQ2hhbm5lbC5pZCxcbiAgICAgICAgZGlzY29yZGVub0NoYW5uZWwsXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gZGlzY29yZGVub0NoYW5uZWw7XG4gICAgfSksXG4gICk7XG5cbiAgY29uc3QgdGhyZWFkcyA9IG5ldyBDb2xsZWN0aW9uPGJpZ2ludCwgRGlzY29yZGVub0NoYW5uZWw+KFxuICAgIGRpc2NvcmRlbm9DaGFubmVscy5tYXAoKHQpID0+IFt0LmlkLCB0XSksXG4gICk7XG5cbiAgZXZlbnRIYW5kbGVycy50aHJlYWRMaXN0U3luYz8uKFxuICAgIHRocmVhZHMsXG4gICAgcGF5bG9hZC5tZW1iZXJzLFxuICAgIHNub3dmbGFrZVRvQmlnaW50KHBheWxvYWQuZ3VpbGRJZCksXG4gICk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IlNBQVMsYUFBYSxTQUFRLFlBQWM7U0FDbkMsYUFBYSxTQUFRLGNBQWdCO1NBRXJDLFVBQVUsU0FBUSx1QkFBeUI7U0FHM0MsaUJBQWlCLFNBQVEsb0JBQXNCO1NBQy9DLFVBQVUsU0FBUSx3QkFBMEI7c0JBRS9CLG9CQUFvQixDQUFDLElBQTJCO1VBQzlELE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQztVQUVoQixrQkFBa0IsU0FBUyxPQUFPLENBQUMsR0FBRyxDQUMxQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsUUFBUSxNQUFNO2NBQ3pCLGlCQUFpQixTQUFTLFVBQVUsQ0FBQyx1QkFBdUIsQ0FDaEUsTUFBTSxFQUNOLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxPQUFPO2NBRzdCLGFBQWEsQ0FBQyxHQUFHLEVBQ3JCLFFBQVUsR0FDVixpQkFBaUIsQ0FBQyxFQUFFLEVBQ3BCLGlCQUFpQjtlQUdaLGlCQUFpQjs7VUFJdEIsT0FBTyxPQUFPLFVBQVUsQ0FDNUIsa0JBQWtCLENBQUMsR0FBRyxFQUFFLENBQUM7WUFBTSxDQUFDLENBQUMsRUFBRTtZQUFFLENBQUM7OztJQUd4QyxhQUFhLENBQUMsY0FBYyxHQUMxQixPQUFPLEVBQ1AsT0FBTyxDQUFDLE9BQU8sRUFDZixpQkFBaUIsQ0FBQyxPQUFPLENBQUMsT0FBTyJ9