import { eventHandlers } from "../../bot.ts";
import { cacheHandlers } from "../../cache.ts";
import { snowflakeToBigint } from "../../util/bigint.ts";
export async function handleMessageReactionRemoveEmoji(data) {
    const payload = data.d;
    const message = await cacheHandlers.get("messages", snowflakeToBigint(payload.messageId));
    if (message?.reactions) {
        message.reactions = message.reactions.filter((reaction)=>!(// MUST USE == because discord sends null and we use undefined
            reaction.emoji.id == payload.emoji.id && reaction.emoji.name === payload.emoji.name)
        );
        if (!message.reactions.length) message.reactions = undefined;
        await cacheHandlers.set("messages", message.id, message);
    }
    eventHandlers.reactionRemoveEmoji?.(payload.emoji, snowflakeToBigint(payload.messageId), snowflakeToBigint(payload.channelId), payload.guildId ? snowflakeToBigint(payload.guildId) : undefined);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZGlzY29yZGVuby9kaXNjb3JkZW5vL21haW4vc3JjL2hhbmRsZXJzL21lc3NhZ2VzL01FU1NBR0VfUkVBQ1RJT05fUkVNT1ZFX0VNT0pJLnRzPiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBldmVudEhhbmRsZXJzIH0gZnJvbSBcIi4uLy4uL2JvdC50c1wiO1xuaW1wb3J0IHsgY2FjaGVIYW5kbGVycyB9IGZyb20gXCIuLi8uLi9jYWNoZS50c1wiO1xuaW1wb3J0IHR5cGUgeyBEaXNjb3JkR2F0ZXdheVBheWxvYWQgfSBmcm9tIFwiLi4vLi4vdHlwZXMvZ2F0ZXdheS9nYXRld2F5X3BheWxvYWQudHNcIjtcbmltcG9ydCB0eXBlIHsgTWVzc2FnZVJlYWN0aW9uUmVtb3ZlRW1vamkgfSBmcm9tIFwiLi4vLi4vdHlwZXMvbWVzc2FnZXMvbWVzc2FnZV9yZWFjdGlvbl9yZW1vdmVfZW1vamkudHNcIjtcbmltcG9ydCB7IHNub3dmbGFrZVRvQmlnaW50IH0gZnJvbSBcIi4uLy4uL3V0aWwvYmlnaW50LnRzXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlUmVhY3Rpb25SZW1vdmVFbW9qaShcbiAgZGF0YTogRGlzY29yZEdhdGV3YXlQYXlsb2FkLFxuKSB7XG4gIGNvbnN0IHBheWxvYWQgPSBkYXRhLmQgYXMgTWVzc2FnZVJlYWN0aW9uUmVtb3ZlRW1vamk7XG4gIGNvbnN0IG1lc3NhZ2UgPSBhd2FpdCBjYWNoZUhhbmRsZXJzLmdldChcbiAgICBcIm1lc3NhZ2VzXCIsXG4gICAgc25vd2ZsYWtlVG9CaWdpbnQocGF5bG9hZC5tZXNzYWdlSWQpLFxuICApO1xuXG4gIGlmIChtZXNzYWdlPy5yZWFjdGlvbnMpIHtcbiAgICBtZXNzYWdlLnJlYWN0aW9ucyA9IG1lc3NhZ2UucmVhY3Rpb25zLmZpbHRlcihcbiAgICAgIChyZWFjdGlvbikgPT5cbiAgICAgICAgIShcbiAgICAgICAgICAvLyBNVVNUIFVTRSA9PSBiZWNhdXNlIGRpc2NvcmQgc2VuZHMgbnVsbCBhbmQgd2UgdXNlIHVuZGVmaW5lZFxuICAgICAgICAgIHJlYWN0aW9uLmVtb2ppLmlkID09IHBheWxvYWQuZW1vamkuaWQgJiZcbiAgICAgICAgICByZWFjdGlvbi5lbW9qaS5uYW1lID09PSBwYXlsb2FkLmVtb2ppLm5hbWVcbiAgICAgICAgKSxcbiAgICApO1xuXG4gICAgaWYgKCFtZXNzYWdlLnJlYWN0aW9ucy5sZW5ndGgpIG1lc3NhZ2UucmVhY3Rpb25zID0gdW5kZWZpbmVkO1xuXG4gICAgYXdhaXQgY2FjaGVIYW5kbGVycy5zZXQoXCJtZXNzYWdlc1wiLCBtZXNzYWdlLmlkLCBtZXNzYWdlKTtcbiAgfVxuXG4gIGV2ZW50SGFuZGxlcnMucmVhY3Rpb25SZW1vdmVFbW9qaT8uKFxuICAgIHBheWxvYWQuZW1vamksXG4gICAgc25vd2ZsYWtlVG9CaWdpbnQocGF5bG9hZC5tZXNzYWdlSWQpLFxuICAgIHNub3dmbGFrZVRvQmlnaW50KHBheWxvYWQuY2hhbm5lbElkKSxcbiAgICBwYXlsb2FkLmd1aWxkSWQgPyBzbm93Zmxha2VUb0JpZ2ludChwYXlsb2FkLmd1aWxkSWQpIDogdW5kZWZpbmVkLFxuICApO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJTQUFTLGFBQWEsU0FBUSxZQUFjO1NBQ25DLGFBQWEsU0FBUSxjQUFnQjtTQUdyQyxpQkFBaUIsU0FBUSxvQkFBc0I7c0JBRWxDLGdDQUFnQyxDQUNwRCxJQUEyQjtVQUVyQixPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUM7VUFDaEIsT0FBTyxTQUFTLGFBQWEsQ0FBQyxHQUFHLEVBQ3JDLFFBQVUsR0FDVixpQkFBaUIsQ0FBQyxPQUFPLENBQUMsU0FBUztRQUdqQyxPQUFPLEVBQUUsU0FBUztRQUNwQixPQUFPLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUN6QyxRQUFRLEtBRUwsRUFBOEQsQUFBOUQsNERBQThEO1lBQzlELFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUNyQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUk7O2FBSTNDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxTQUFTLEdBQUcsU0FBUztjQUV0RCxhQUFhLENBQUMsR0FBRyxFQUFDLFFBQVUsR0FBRSxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU87O0lBR3pELGFBQWEsQ0FBQyxtQkFBbUIsR0FDL0IsT0FBTyxDQUFDLEtBQUssRUFDYixpQkFBaUIsQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUNuQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUNuQyxPQUFPLENBQUMsT0FBTyxHQUFHLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksU0FBUyJ9