export var DiscordBitwisePermissionFlags;
(function(DiscordBitwisePermissionFlags) {
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows creation of instant invites */ "CREATE_INSTANT_INVITE"] = 1] = "CREATE_INSTANT_INVITE";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows kicking members */ "KICK_MEMBERS"] = 2] = "KICK_MEMBERS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows banning members */ "BAN_MEMBERS"] = 4] = "BAN_MEMBERS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows all permissions and bypasses channel permission overwrites */ "ADMINISTRATOR"] = 8] = "ADMINISTRATOR";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows management and editing of channels */ "MANAGE_CHANNELS"] = 16] = "MANAGE_CHANNELS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows management and editing of the guild */ "MANAGE_GUILD"] = 32] = "MANAGE_GUILD";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for the addition of reactions to messages */ "ADD_REACTIONS"] = 64] = "ADD_REACTIONS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for viewing of audit logs */ "VIEW_AUDIT_LOG"] = 128] = "VIEW_AUDIT_LOG";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for using priority speaker in a voice channel */ "PRIORITY_SPEAKER"] = 256] = "PRIORITY_SPEAKER";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows the user to go live */ "STREAM"] = 512] = "STREAM";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows guild members to view a channel, which includes reading messages in text channels */ "VIEW_CHANNEL"] = 1024] = "VIEW_CHANNEL";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for sending messages in a channel */ "SEND_MESSAGES"] = 2048] = "SEND_MESSAGES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for sending of /tts messages */ "SEND_TTS_MESSAGES"] = 4096] = "SEND_TTS_MESSAGES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for deletion of other users messages */ "MANAGE_MESSAGES"] = 8192] = "MANAGE_MESSAGES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Links sent by users with this permission will be auto-embedded */ "EMBED_LINKS"] = 16384] = "EMBED_LINKS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for uploading images and files */ "ATTACH_FILES"] = 32768] = "ATTACH_FILES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for reading of message history */ "READ_MESSAGE_HISTORY"] = 65536] = "READ_MESSAGE_HISTORY";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for using the @everyone tag to notify all users in a channel, and the @here tag to notify all online users in a channel */ "MENTION_EVERYONE"] = 131072] = "MENTION_EVERYONE";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows the usage of custom emojis from other servers */ "USE_EXTERNAL_EMOJIS"] = 262144] = "USE_EXTERNAL_EMOJIS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for viewing guild insights */ "VIEW_GUILD_INSIGHTS"] = 524288] = "VIEW_GUILD_INSIGHTS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for joining of a voice channel */ "CONNECT"] = 1048576] = "CONNECT";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for speaking in a voice channel */ "SPEAK"] = 2097152] = "SPEAK";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for muting members in a voice channel */ "MUTE_MEMBERS"] = 4194304] = "MUTE_MEMBERS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for deafening of members in a voice channel */ "DEAFEN_MEMBERS"] = 8388608] = "DEAFEN_MEMBERS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for moving of members between voice channels */ "MOVE_MEMBERS"] = 16777216] = "MOVE_MEMBERS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for using voice-activity-detection in a voice channel */ "USE_VAD"] = 33554432] = "USE_VAD";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for modification of own nickname */ "CHANGE_NICKNAME"] = 67108864] = "CHANGE_NICKNAME";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for modification of other users nicknames */ "MANAGE_NICKNAMES"] = 134217728] = "MANAGE_NICKNAMES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows management and editing of roles */ "MANAGE_ROLES"] = 268435456] = "MANAGE_ROLES";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows management and editing of webhooks */ "MANAGE_WEBHOOKS"] = 536870912] = "MANAGE_WEBHOOKS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows management and editing of emojis */ "MANAGE_EMOJIS"] = 1073741824] = "MANAGE_EMOJIS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows members to use slash commands in text channels */ "USE_SLASH_COMMANDS"] = 2147483648] = "USE_SLASH_COMMANDS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for requesting to speak in stage channels. */ "REQUEST_TO_SPEAK"] = 4294967297] = "REQUEST_TO_SPEAK";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for deleting and archiving threads, and viewing all private threads */ "MANAGE_THREADS"] = 17179869184] = "MANAGE_THREADS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for creating and participating in threads */ "USE_PUBLIC_THREADS"] = 34359738368] = "USE_PUBLIC_THREADS";
    DiscordBitwisePermissionFlags[DiscordBitwisePermissionFlags[/** Allows for creating and participating in private threads */ "USE_PRIVATE_THREADS"] = 68719476736] = "USE_PRIVATE_THREADS";
})(DiscordBitwisePermissionFlags || (DiscordBitwisePermissionFlags = {
}));
export const BitwisePermissions = DiscordBitwisePermissionFlags;
//# sourceMappingURL=data:application/json;base64,