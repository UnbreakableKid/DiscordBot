export var PermissionLevels;
(function(PermissionLevels) {
    PermissionLevels[PermissionLevels["MEMBER"] = 0] = "MEMBER";
    PermissionLevels[PermissionLevels["MODERATOR"] = 1] = "MODERATOR";
    PermissionLevels[PermissionLevels["ADMIN"] = 2] = "ADMIN";
    PermissionLevels[PermissionLevels["SERVER_OWNER"] = 3] = "SERVER_OWNER";
    PermissionLevels[PermissionLevels["BOT_SUPPORT"] = 4] = "BOT_SUPPORT";
    PermissionLevels[PermissionLevels["BOT_DEVS"] = 5] = "BOT_DEVS";
    PermissionLevels[PermissionLevels["BOT_OWNER"] = 6] = "BOT_OWNER";
})(PermissionLevels || (PermissionLevels = {
}));
//# sourceMappingURL=data:application/json;base64,